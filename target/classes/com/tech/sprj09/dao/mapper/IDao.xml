<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">











<mapper namespace="com.tech.sprj09.dao.IDao">

	<sql id="includelist">
		<choose>
		    <when test="param4==1">
		      WHERE SIKLOCA LIKE '%'||#{param3}||'%'
		    </when>
		   <when test="param4==2">
		      WHERE SIKCONTENT LIKE '%'||#{param3}||'%'
		    </when>
		    <when test="param4==3">
		      WHERE SIKCONTENT LIKE '%'||#{param3}||'%' OR SIKLOKA LIKE '%'||#{param3}||'%'
		    </when>
		    <otherwise>
		      
		    </otherwise>
	  </choose>
	</sql>


    <select id="selectBoardTotCount1" resultType="Integer">
    	SELECT COUNT(*) FROM SIKDANG WHERE SIKLOKA LIKE '%'||#{param1}||'%'
    </select>
    <select id="selectBoardTotCount2" resultType="Integer">
    	SELECT COUNT(*) FROM SIKDANG WHERE SIKCONTENT LIKE '%'||#{param1}||'%'
    </select>
    <select id="selectBoardTotCount3" resultType="Integer">
    	SELECT COUNT(*) FROM SIKDANG WHERE SIKCONTENT LIKE '%'||#{param1}||'%' OR SIKLOKA LIKE '%'||#{param1}||'%'
    </select>
    <select id="selectBoardTotCount4" resultType="Integer">
    	SELECT COUNT(*) FROM SIKDANG
    </select>
    
    <!-- <select id="list" resultType="com.tech.sprj09.dto.BoardDto">	
		SELECT BID,BNAME,BTITLE,BCONTENT,BDATE,
		BHIT,BGROUP,BSTEP,BINDENT
		FROM (SELECT ROWNUM NUM, N.* FROM 
		(SELECT * FROM MBOARD ORDER BY BDATE DESC) N)
		WHERE NUM BETWEEN #{param1} AND #{param2}
		
		SELECT BID,BNAME,BTITLE,BCONTENT,
		BDATE,BHIT,BGROUP,BSTEP,BINDENT
		FROM (SELECT ROWNUM NUM, N.* FROM 
		(SELECT * FROM MBOARD ORDER BY 
		BGROUP DESC, BSTEP ASC) N)
		WHERE NUM BETWEEN #{param1} AND #{param2}
		
		SELECT BID,BNAME,BTITLE,BCONTENT,
		BDATE,BHIT,BGROUP,BSTEP,BINDENT,FILESRC
		FROM (SELECT ROWNUM NUM, N.* FROM 
		(SELECT * FROM MBOARD ORDER BY 
		BGROUP DESC, BSTEP ASC) N
        <include refid="includelist" />
        )
		WHERE NUM BETWEEN #{param1} AND #{param2}
		
    </select> -->
    
    <select id="list" resultType="com.tech.sprj09.dto.SikdangDto">
    	SELECT SIKNO,SIKLOCA,SIKNAME,SIKCONTENT,SIKWRITER,
		SIKADDRESS,SIKTEL,SIKDATE,SIKHIT,SIKOPENCLOSE,FILESRC
		FROM (SELECT ROWNUM NUM, N.* FROM 
		(SELECT * FROM SIKDANG ORDER BY SIKDATE DESC) N)
		WHERE NUM BETWEEN #{param1} AND #{param2}
    </select>
    
    <select id="contentview" resultType="com.tech.sprj09.dto.SikdangDto">
    	SELECT SIKNO,SIKLOCA,SIKNAME,SIKCONTENT,SIKWRITER,
		SIKADDRESS,SIKTEL,SIKDATE,SIKHIT,SIKOPENCLOSE,FILESRC
		FROM SIKDANG WHERE SIKNO=#{param1, jdbcType=VARCHAR}
    </select>
    
    <select id="reviewList" resultType="com.tech.sprj09.dto.ReviewDto">
    	SELECT REVIEWNO,MEMNO,SIKNO,REVIEWTITLE,REVIEWCONTENT,REVIEWLIKE,
		REVIEWDATE,SPOON,TASTE,PRICE,SINGO,REVIEWFILE
		FROM REVIEW ORDER BY REVIEWDATE DESC
		<!-- WHERE REVIEWNO=#{param1, jdbcType=VARCHAR} -->
    </select>
    
    <update id="upLikeHit">
    	UPDATE REVIEW SET REVIEWLIKE=#{param2, jdbcType=VARCHAR} WHERE REVIEWNO=#{param1, jdbcType=VARCHAR}
    </update>
    
    <insert id="reviewWrite">
    	INSERT INTO REVIEW(REVIEWNO,MEMNO,SIKNO,REVIEWTITLE,REVIEWCONTENT,
    	REVIEWLIKE,REVIEWDATE,SPOON,TASTE,PRICE,CLEAN,SINGO,REVIEWFILE)
		VALUES(REVIEW_SEQ.NEXTVAL,#{param1, jdbcType=VARCHAR},#{param2, jdbcType=VARCHAR},
		#{param3, jdbcType=VARCHAR},#{param4, jdbcType=VARCHAR},
		0,SYSDATE,#{param5, jdbcType=VARCHAR},0,0,0,0,#{param6, jdbcType=VARCHAR})
    </insert>
    
    <select id="reviewUpdate" resultType="com.tech.sprj09.dto.ReviewDto">
    	SELECT REVIEWNO,MEMNO,SIKNO,REVIEWTITLE,REVIEWCONTENT,REVIEWLIKE,
		REVIEWDATE,SPOON,TASTE,PRICE,SINGO,REVIEWFILE
		FROM REVIEW WHERE REVIEWNO=#{param1, jdbcType=VARCHAR}
    </select>
    
    <update id="reviewModify">
    	UPDATE REVIEW SET REVIEWCONTENT=#{param2, jdbcType=VARCHAR},
    	SPOON=#{param3, jdbcType=VARCHAR},REVIEWFILE=#{param4, jdbcType=VARCHAR} 
    	WHERE REVIEWNO=#{param1, jdbcType=VARCHAR}
    </update>
    
    <delete id="reviewDelete">
    	DELETE FROM REVIEW WHERE REVIEWNO=#{param1}
    </delete>
    
    
    
	
	<!-- 회원가입DB Insert -->
    <insert id="join" >
    INSERT INTO MEMBER(MEMNO,MEMID,MEMPASS,MEMNAME,MEMBIRTH,MEMSEX,MEMEMAIL,MEMPNUM,MEMADDRESS,MEMLIKEMENU,MEMJOINDATE,MEMADMIN,SHPWD,BCPWD) 
    VALUES(MEMBER_SEQ.NEXTVAL,#{param1},#{param2},#{param3},#{param4},#{param5},#{param6},#{param7},#{param8},#{param9},SYSDATE,'회원',#{param10},#{param11})
    </insert>
    
    <!-- ID중복체크 -->
    <select id="idLookup" resultType="Int">	
	SELECT COUNT(MEMID) 
	FROM MEMBER
	WHERE MEMID LIKE #{param1}
    </select>    
    
     <!-- 로그인db -->
     <!-- 로그인 성공시 1  실패시 카운트 되지 않음 -->
     <select id="login" resultType="com.tech.sprj09.dto.MemberDto">
     SELECT MEMID, MEMPASS FROM MEMBER WHERE MEMID = #{param1} AND MEMPASS = #{param2}
     </select>
    
     <!-- 로그인 암호화 -->
     <select id="shpwd" resultType="String">
     SELECT SHPWD FROM MEMBER WHERE MEMID=#{param1}
     </select>
     <select id="bcpwd" resultType="String">
     SELECT BCPWD FROM MEMBER WHERE MEMID=#{param1}
     </select>
     
     <!-- 암호화 재설정, 초기 암호화 설정 안되어 있을 때 -->
	<update id="passUpdate">
		UPDATE MEMBER SET SHPWD=#{param2},
		BCPWD=#{param3} WHERE MEMID=#{param1}
	</update>
     
     <!-- 이메일 인증 구현 -->
     <!-- 회원가입 시 이메일 인증을 위한 랜덤번호 저장 -->
     <update id="updateMailKey">
     	update member set mail_key=#{param1} where email=#{param2} and id=#{param3}
     </update>
     <!-- 메일 인증 후, mail_auth 값을 0에서 1로 변경 -->
     <update id="updateMailAuth">
     	update member set mail_auth=1 where email=#{param1} and id=#{param2}
     </update>
     <!-- 로그인 시, 이메일 인증 여부 체크 -->
     <select id="emailAuthFail" resultType="int">
     	select count(*) from member where id=#{param1} and mail_auth=1
     </select>

     <!-- 멤버 권한 가져오기 -->
    <select id="getMemberAdmin" parameterType="String" resultType="String">
    SELECT MEMADMIN FROM MEMBER WHERE MEMID=#{MEMID}
	</select>
	
     <!-- 비밀번호 재설정 -->
	<update id="passChange">
		UPDATE MEMBER SET 
		MEMPASS=#{param2},
		SHPWD=#{param3},BCPWD=#{param4} 
		WHERE MEMID=#{param1}
	</update>
	
	<!-- 일일방문자수 -->
    <insert id="updateVisitorCount" >
    INSERT INTO VISITORCOUNT(NO,IP,TIME,REFFER,AGENT) 
    VALUES(MEMBER_SEQ.NEXTVAL,#{PARAM1},#{PARAM2},#{PARAM3},#{PARAM4})
    </insert>
	
	<!-- 총방문자수 -->    

</mapper>
